{"ast":null,"code":"var _jsxFileName = \"/home/subham-pradhan/Downloads/healthcare-app/frontend/src/components/AddPatientForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPatientForm() {\n  _s();\n  const [name, setName] = useState('');\n  const [age, setAge] = useState('');\n  const [condition, setCondition] = useState(''); // New state for condition\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    // Prepare the data to send to the backend\n    const patientData = {\n      name: name,\n      age: age,\n      condition: condition // Ensure the condition is included\n    };\n    try {\n      const response = await fetch('http://localhost:5000/patients', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(patientData)\n      });\n      if (!response.ok) {\n        throw new Error('Error adding patient');\n      }\n      const data = await response.json();\n      console.log(data.message);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Name:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Age:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: age,\n      onChange: e => setAge(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Condition:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: condition,\n      onChange: e => setCondition(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Add Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(AddPatientForm, \"c8totSR1qi6b21mlT3bPoe+U5cI=\");\n_c = AddPatientForm;\nexport default AddPatientForm;\nvar _c;\n$RefreshReg$(_c, \"AddPatientForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AddPatientForm","_s","name","setName","age","setAge","condition","setCondition","handleSubmit","event","preventDefault","patientData","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","message","error","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["/home/subham-pradhan/Downloads/healthcare-app/frontend/src/components/AddPatientForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction AddPatientForm() {\n    const [name, setName] = useState('');\n    const [age, setAge] = useState('');\n    const [condition, setCondition] = useState(''); // New state for condition\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        // Prepare the data to send to the backend\n        const patientData = {\n            name: name,\n            age: age,\n            condition: condition, // Ensure the condition is included\n        };\n\n        try {\n            const response = await fetch('http://localhost:5000/patients', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(patientData),\n            });\n\n            if (!response.ok) {\n                throw new Error('Error adding patient');\n            }\n\n            const data = await response.json();\n            console.log(data.message);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label>Name:</label>\n            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\n            <br />\n            <label>Age:</label>\n            <input type=\"number\" value={age} onChange={(e) => setAge(e.target.value)} required />\n            <br />\n            <label>Condition:</label>\n            <input type=\"text\" value={condition} onChange={(e) => setCondition(e.target.value)} required />\n            <br />\n            <button type=\"submit\">Add Patient</button>\n        </form>\n    );\n}\n\nexport default AddPatientForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}