{"ast":null,"code":"var _jsxFileName = \"/home/subham-pradhan/Downloads/healthcare-app/frontend/src/app.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AddPatientForm from './components/AddPatientForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [patients, setPatients] = useState([]);\n\n  // Fetch the patient list when the component mounts\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/patients');\n      const data = await response.json();\n      setPatients(data);\n    } catch (error) {\n      console.error('Failed to load patients:', error);\n    }\n  };\n  const addPatient = async patient => {\n    try {\n      const response = await fetch('http://localhost:5000/patients', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(patient)\n      });\n      if (response.ok) {\n        fetchPatients(); // Refresh patient list after adding\n      } else {\n        console.error('Error adding patient');\n      }\n    } catch (error) {\n      console.error('Failed to add patient:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Healthcare Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPatientForm, {\n      onAddPatient: addPatient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: patients.map((patient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [patient.name, \" (Age: \", patient.age, \", Condition: \", patient.condition, \")\"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"2mHPNi2MF+s8ms7PrTd3nXwgmV8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","AddPatientForm","jsxDEV","_jsxDEV","App","_s","patients","setPatients","fetchPatients","response","fetch","data","json","error","console","addPatient","patient","method","headers","body","JSON","stringify","ok","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddPatient","map","index","name","age","condition","_c","$RefreshReg$"],"sources":["/home/subham-pradhan/Downloads/healthcare-app/frontend/src/app.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AddPatientForm from './components/AddPatientForm';\n\nconst App = () => {\n  const [patients, setPatients] = useState([]);\n\n  // Fetch the patient list when the component mounts\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n\n  const fetchPatients = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/patients');\n      const data = await response.json();\n      setPatients(data);\n    } catch (error) {\n      console.error('Failed to load patients:', error);\n    }\n  };\n\n  const addPatient = async (patient) => {\n    try {\n      const response = await fetch('http://localhost:5000/patients', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(patient),\n      });\n\n      if (response.ok) {\n        fetchPatients(); // Refresh patient list after adding\n      } else {\n        console.error('Error adding patient');\n      }\n    } catch (error) {\n      console.error('Failed to add patient:', error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Healthcare Application</h1>\n\n      {/* Display AddPatientForm and pass addPatient function */}\n      <AddPatientForm onAddPatient={addPatient} />\n\n      <h2>Patient List</h2>\n      <ul>\n        {patients.map((patient, index) => (\n          <li key={index}>\n            {patient.name} (Age: {patient.age}, Condition: {patient.condition})\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACdQ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,CAAC;MAC9D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,WAAW,CAACI,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,MAAME,UAAU,GAAG,MAAOC,OAAO,IAAK;IACpC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DO,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;MAC9B,CAAC,CAAC;MAEF,IAAIP,QAAQ,CAACa,EAAE,EAAE;QACfd,aAAa,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACLM,OAAO,CAACD,KAAK,CAAC,sBAAsB,CAAC;MACvC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD;EACF,CAAC;EAED,oBACEV,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG/BxB,OAAA,CAACF,cAAc;MAAC2B,YAAY,EAAEb;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAE5CxB,OAAA;MAAAoB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBxB,OAAA;MAAAoB,QAAA,EACGjB,QAAQ,CAACuB,GAAG,CAAC,CAACb,OAAO,EAAEc,KAAK,kBAC3B3B,OAAA;QAAAoB,QAAA,GACGP,OAAO,CAACe,IAAI,EAAC,SAAO,EAACf,OAAO,CAACgB,GAAG,EAAC,eAAa,EAAChB,OAAO,CAACiB,SAAS,EAAC,GACpE;MAAA,GAFSH,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACtB,EAAA,CAvDID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAyDT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}